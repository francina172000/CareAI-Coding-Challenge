   version: '3.8'

   services:
     db:
       image: postgres:13-alpine
       container_name: carein_db
       environment:
         # These will be read from the .env file in your project root
         POSTGRES_USER: ${POSTGRES_USER}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
         POSTGRES_DB: ${POSTGRES_DB}
       volumes:
         - pgdata:/var/lib/postgresql/data
       ports:
         - "5432:5432"
       healthcheck:
         test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
         interval: 10s
         timeout: 5s
         retries: 5
       restart: unless-stopped

     backend:
       build:
         context: ./backend
         dockerfile: Dockerfile
       container_name: carein_backend
       ports:
         - "8000:8000"
       env_file:
         - ./.env # This line tells Docker Compose to load variables from the .env file
       environment:
         PYTHONUNBUFFERED: 1
         # DATABASE_URL and GEMINI_API_KEY will be loaded from .env via env_file
       volumes:
         - ./backend/app:/app/app # For live reload
       depends_on:
         db:
           condition: service_healthy
       restart: unless-stopped

     frontend:
       build:
         context: ./frontend
         dockerfile: Dockerfile
         args:
           # This value is passed to the frontend Dockerfile during the build
           NEXT_PUBLIC_API_BASE_URL: http://backend:8000/api/v1
       container_name: carein_frontend
       ports:
         - "3000:3000"
       environment:
         CHOKIDAR_USEPOLLING: "true" # For better hot-reloading in Docker
       volumes:
         - ./frontend:/app
         - /app/node_modules
         - /app/.next
       depends_on:
         - backend
       restart: unless-stopped

   volumes:
     pgdata: {}